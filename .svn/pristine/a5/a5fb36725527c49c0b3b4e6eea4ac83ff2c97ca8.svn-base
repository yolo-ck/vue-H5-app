<template>
  <div class="page">
    <mt-header title="人员详情修改">
      <mt-button @click="back" icon="back" slot="left"></mt-button>
    </mt-header>

    <div class="content">
      <div class="scroll-list-wrap">
        <cube-scroll ref="scroll">
          <div class="img">
            <img :src="hochFormat" width="100%" height="100%" alt />
          </div>

          <div class="van-cell van-coupon-cell">
            <div class="van-cell__title">
              <span>姓名：{{dataList.userName}}</span>
            </div>
            <div class="van-cell__title">
              <span>性别：{{dataList.sex}}</span>
            </div>
          </div>
          <div class="van-cell van-coupon-cell">
            <div class="van-cell__title">
              <span>身份证号码：{{dataList.idCard}}</span>
            </div>
          </div>
          <div class="van-cell van-coupon-cell">
            <div class="van-cell__title">
              <span>籍贯：{{dataList.censusRegister}}</span>
            </div>
            <div class="van-cell__title">
              <span>民族：{{dataList.national}}</span>
            </div>
          </div>
          <van-cell-group>
            <van-field
              v-model="phone"
              label="联系方式："
              type="textarea"
              placeholder="可修改"
              rows="1"
              autosize
            />

            <van-field
              v-model="jobAddress"
              label="工作单位："
              type="textarea"
              placeholder="可修改"
              rows="1"
              autosize
              @click="showShop"
            />
          </van-cell-group>
          <div class="van-cell van-coupon-cell">
            <div class="van-cell__title">
              <span>居住地址:</span>
            </div>
          </div>
          <address-list ref="addressComp" />
          <mt-button class="submit" type="primary" @click="submit">提交</mt-button>
          <div style="height:40px;"></div>
        </cube-scroll>
      </div>
    </div>
  </div>
</template>
<script>
import { HOST, HOST_SRC, BASE_PATH } from "../../data/data.js";
import { MessageBox } from "mint-ui";
import AddressList from "@/components/addressList";
import { Toast } from "vant";
// shops/lgtShops/getShopsByUserId
export default {
  name: "messageChange",
  data() {
    return {
      phone: "",
      job: "",
      jobAddressArr: [],
      jobAddress: "",
      cardType: "",
      dataList: [],
      staffuserId: "",
      address: [],
      param: "",
      addressData: [],
      // shopAddresssId: "",
      hochFormat: "",
      //绑定的住址
      userRent: {}
    };
  },
  computed: {
    userId() {
      return this.$store.getters.getUserId;
    }
  },
  beforeRouteEnter(to, from, next) {
    next(vm => {
      if (from.path.indexOf("selectRoom") > -1) {
        vm.$store.commit("SET_KEEP_ALIVE", ["messageChange"]);
      }
    });
  },
  beforeRouteLeave(to, from, next) {
    if (to.path.indexOf("selectRoom") > -1) {
      this.$store.commit("SET_KEEP_ALIVE", ["B", "C"]);
    } else if (to.path.indexOf("peopleManage") > -1) {
      this.$store.commit("SET_KEEP_ALIVE", []);
    }
    next();
  },

  mounted() {
    this.$store.commit("setUserType", "messageChange");
    this.dataList = this.$route.params.personMessage;
    console.log(this.dataList);
    this.staffuserId = this.dataList.userId;
    this.$refs.addressComp.staffId = this.staffuserId;
    this.phone = this.dataList.telephone;
    this.jobAddress = this.dataList.workAddress;
    this.hochFormat = HOST_SRC + this.dataList.hochFormat;
    this.shopAddresssId = this.dataList.workUnit;
    // console.log(this.userId, this.staffuserId);
    this.getShop();
  },
  methods: {
    back() {
      this.$store.commit("setStaffId", "");
      this.$router.push({ name: "peopleManage" });
    },
    //获取所有商铺
    getShop() {
      const url = HOST + "/a/shops/lgtShops/getShopsByUserId";
      this.$http({
        method: "post",
        url: url,
        data: {
          userId: this.userId
        }
      }).then(data => {
        this.addressData = data.data.data;
        for (var i = 0; i < this.addressData.length; i++) {
          this.jobAddressArr.push({ text: this.addressData[i].name });
        }
      });
    },
    showShop() {
      if (!this.shopPicker) {
        this.shopPicker = this.$createPicker({
          title: "工作单位",
          data: [this.jobAddressArr],
          onSelect: this.selectHandle,
          onCancel: this.cancelHandle
        });
      }
      this.shopPicker.show();
    },
    selectHandle(selectedVal, selectedIndex, selectedText) {
      this.jobAddress = selectedText.join(" ");
      this.shopAddresssId = this.addressData[selectedIndex].id;
    },
    cancelHandle() {},
    submit() {
      MessageBox.confirm("", {
        message: "是否确认修改",
        title: "提示",
        confirmButtonText: "确定",
        cancelButtonText: "取消"
      }).then(action => {
        var that = this;
        if (action == "confirm") {
          //确认的回调

          var addresses = that.$refs.addressComp.addresses;

          var filtedAddresses = [];

          for (var idx in addresses) {
            var item = addresses[idx];
            if (item.room && item.room.length > 0) {
              filtedAddresses.push(item);
            }
          }
          if (filtedAddresses.length > 3 - this.$refs.addressComp.auditSize) {
            Toast({
              message: "每人最多只能提交绑定3个地址！(包含正在审核的)",
              position: "bottom",
              duration: 3000
            });
            return;
          }
          if (!this.phone) {
            Toast("电话号码不可为空");
            return;
          }

          console.log(filtedAddresses);
          this.param = {
            userId: this.staffuserId,
            shopId: this.shopAddresssId,
            phone: this.phone,
            addressData: filtedAddresses
          };

          const toast = this.$createToast({
            txt: "提交中...",
            time: 0,
            mask: true
          });
          toast.show();

          const submitUrl =
            HOST + "/a/mobile/user/register/ownerUpdateEmployee";
          this.$http({
            method: "post",
            url: submitUrl,
            data: {
              param: JSON.stringify(this.param)
            }
          }).then(data => {
            console.log(data);
            toast.hide();
            this.$store.commit("setStaffId", "");
            this.$router.push({ name: "peopleManage" });
          });
        }
      });
    }
  },

  components: {
    "address-list": AddressList
  }
};
</script>
<style scoped>
.content {
  position: absolute;
  top: 44px;
  top: calc(44px + env(safe-area-inset-top));
  bottom: 0px;
  width: 100%;
}
.scroll-list-wrap {
  height: 100%;
}

.img {
  width: 100%;
  height: 240px;
}

.submit {
  width: 98%;
  margin-left: 1%;
}
</style>
<style >
.address .mint-cell-value {
  display: none !important;
}

.address .mint-cell {
  min-height: 24px !important;
}
</style>



